package simulaattorinrunko5FX.src.view;

import java.text.DecimalFormat;

import javafx.application.Application;
import javafx.application.Platform;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.canvas.Canvas;
import javafx.scene.chart.BarChart;
import javafx.scene.chart.CategoryAxis;
import javafx.scene.chart.NumberAxis;
import javafx.scene.chart.XYChart;
import javafx.scene.control.Button;
import javafx.scene.control.ChoiceBox;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.TilePane;
import javafx.scene.layout.VBox;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.stage.Stage;
import javafx.stage.WindowEvent;
import simulaattorinrunko5FX.src.controller.IKontrolleri;
import simulaattorinrunko5FX.src.controller.Kontrolleri;
import simulaattorinrunko5FX.src.simu.framework.Trace;
import simulaattorinrunko5FX.src.simu.framework.Trace.Level;

public class SimulaattorinGUI extends Application implements ISimulaattorinUI {

	// Kontrollerin esittely (tarvitaan käyttöliittymässä)
	private IKontrolleri kontrolleri;

	// Käyttöliittymäkomponentit:
	private TextField aika;
	private TextField viive;
	private Label kokAika = new Label();
	private Label asiakkaat = new Label();
	private Label aikaLabel;
	private Label viiveLabel;
	private Label kokonaisAikaLabel;
	private Label asiakkaatLabel;
	private Label keskLapimenoLabel;
	private Label keskLapimeno;
	private Label keskJononPituusLabel;
	private Label keskJononPituus;
	private Label valintaLabel;
	private Label ahkeruusLabel;
	private Button kaynnistaButton;
	private Button hidastaButton;
	private Button nopeutaButton;
	private Button tuloksetButton;
	private ChoiceBox<String> turvapisteValinta;
	private ChoiceBox<String> ahkeruusValinta1;
	private ChoiceBox<String> ahkeruusValinta2;
	private ChoiceBox<String> ahkeruusValinta3;
	private ChoiceBox<String> ahkeruusValinta4;
	private ChoiceBox<String> ahkeruusValinta5;

	private IVisualisointi naytto;

	@Override
	public void init() {

		Trace.setTraceLevel(Level.INFO);

		kontrolleri = new Kontrolleri(this);
	}

	@Override
	public void start(Stage primaryStage) {
		// Käyttöliittymän rakentaminen
		try {

			primaryStage.setOnCloseRequest(new EventHandler<WindowEvent>() {
				@Override
				public void handle(WindowEvent t) {
					Platform.exit();
					System.exit(0);
				}
			});

			primaryStage.setTitle("Simulaattori");

			kaynnistaButton = new Button();
			kaynnistaButton.setText("Käynnistä simulointi");
			kaynnistaButton.setOnAction(new EventHandler<ActionEvent>() {
				@Override
				public void handle(ActionEvent event) {
					kontrolleri.palvelupisteidenMaara();
					kontrolleri.palvelupisteidenAhkeruus();
					kontrolleri.kaynnistaSimulointi();
					kaynnistaButton.setDisable(true);
				}
			});

			tuloksetButton = new Button("Tulokset");
			tuloksetButton.setOnAction(new EventHandler<ActionEvent>() {
				@Override
				public void handle(ActionEvent event) {
					// simulaattorinrunko5FX.src.view.TuloksetGUI.main(args);
					setTuloksetScene();
				}
			});

			turvapisteValinta = new ChoiceBox<String>();
			// turvapisteValinta.setPrefSize(120, 100);
			turvapisteValinta.getItems().add("1");
			turvapisteValinta.getItems().add("2");
			turvapisteValinta.getItems().add("3");
			turvapisteValinta.getItems().add("4");
			turvapisteValinta.getItems().add("5");
			turvapisteValinta.setValue("1");

			valintaLabel = new Label("Turvatarkastuspisteiden määrä:");
			valintaLabel.setFont(Font.font("Tahoma", FontWeight.NORMAL, 20));

			ahkeruusValinta1 = new ChoiceBox<String>();
			ahkeruusValinta1.getItems().add("Ahkera");
			ahkeruusValinta1.getItems().add("Reipas");
			ahkeruusValinta1.getItems().add("Perus");
			ahkeruusValinta1.getItems().add("Laiska");
			ahkeruusValinta1.getItems().add("Vetelä");
			ahkeruusValinta1.setValue("Laiska");

			ahkeruusValinta2 = new ChoiceBox<String>();
			ahkeruusValinta2.getItems().add("Ahkera");
			ahkeruusValinta2.getItems().add("Reipas");
			ahkeruusValinta2.getItems().add("Perus");
			ahkeruusValinta2.getItems().add("Laiska");
			ahkeruusValinta2.getItems().add("Vetelä");
			ahkeruusValinta2.setValue("Laiska");

			ahkeruusValinta3 = new ChoiceBox<String>();
			ahkeruusValinta3.getItems().add("Ahkera");
			ahkeruusValinta3.getItems().add("Reipas");
			ahkeruusValinta3.getItems().add("Perus");
			ahkeruusValinta3.getItems().add("Laiska");
			ahkeruusValinta3.getItems().add("Vetelä");
			ahkeruusValinta3.setValue("Laiska");

			ahkeruusValinta4 = new ChoiceBox<String>();
			ahkeruusValinta4.getItems().add("Ahkera");
			ahkeruusValinta4.getItems().add("Reipas");
			ahkeruusValinta4.getItems().add("Perus");
			ahkeruusValinta4.getItems().add("Laiska");
			ahkeruusValinta4.getItems().add("Vetelä");
			ahkeruusValinta4.setValue("Laiska");

			ahkeruusValinta5 = new ChoiceBox<String>();
			ahkeruusValinta5.getItems().add("Ahkera");
			ahkeruusValinta5.getItems().add("Reipas");
			ahkeruusValinta5.getItems().add("Perus");
			ahkeruusValinta5.getItems().add("Laiska");
			ahkeruusValinta5.getItems().add("Vetelä");
			ahkeruusValinta5.setValue("Laiska");

			ahkeruusLabel = new Label("Valitse työntekijöiden ahkeruus:");
			ahkeruusLabel.setFont(Font.font("Tahoma", FontWeight.NORMAL, 20));

			hidastaButton = new Button();
			hidastaButton.setText("Hidasta");
			hidastaButton.setOnAction(e -> kontrolleri.hidasta());

			nopeutaButton = new Button();
			nopeutaButton.setText("Nopeuta");
			nopeutaButton.setOnAction(e -> kontrolleri.nopeuta());

			aikaLabel = new Label("Simulointiaika:");
			aikaLabel.setFont(Font.font("Tahoma", FontWeight.NORMAL, 20));
			aika = new TextField("Syötä aika");
			aika.setFont(Font.font("Tahoma", FontWeight.NORMAL, 20));
			aika.setPrefWidth(150);

			viiveLabel = new Label("Viive:");
			viiveLabel.setFont(Font.font("Tahoma", FontWeight.NORMAL, 20));
			viive = new TextField("Syötä viive");
			viive.setFont(Font.font("Tahoma", FontWeight.NORMAL, 20));
			viive.setPrefWidth(150);

			HBox hBox = new HBox();
			hBox.setPadding(new Insets(15, 12, 15, 12)); // marginaalit ylä, oikea, ala, vasen
			hBox.setSpacing(10); // noodien välimatka 10 pikseliä

			GridPane grid = new GridPane();
			grid.setAlignment(Pos.CENTER);
			grid.setVgap(10);
			grid.setHgap(5);

			grid.add(aikaLabel, 0, 0); // sarake, rivi
			grid.add(aika, 1, 0); // sarake, rivi
			grid.add(viiveLabel, 0, 1); // sarake, rivi
			grid.add(viive, 1, 1); // sarake, rivi
			grid.add(valintaLabel, 0, 2, 2, 1);
			grid.add(turvapisteValinta, 3, 2);
			grid.add(ahkeruusLabel, 0, 3, 2, 1);
			grid.add(ahkeruusValinta1, 3, 3);
			grid.add(ahkeruusValinta2, 4, 3);
			grid.add(ahkeruusValinta3, 5, 3);
			grid.add(ahkeruusValinta4, 6, 3);
			grid.add(ahkeruusValinta5, 7, 3);
			grid.add(kaynnistaButton, 0, 4); // sarake, rivi
			grid.add(nopeutaButton, 0, 5); // sarake, rivi
			grid.add(hidastaButton, 1, 5); // sarake, rivi
			grid.add(tuloksetButton, 0, 6);

			naytto = new Visualisointi(400, 200);

			// Täytetään boxi:
			hBox.getChildren().addAll(grid, (Canvas) naytto);

			Scene scene = new Scene(hBox);
			primaryStage.setScene(scene);
			primaryStage.show();

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	// Käyttöliittymän rajapintametodit (kutsutaan kontrollerista)

	@Override
	public double getAika() {
		return Double.parseDouble(aika.getText());
	}

	@Override
	public long getViive() {
		return Long.parseLong(viive.getText());
	}

	@Override
	public void setLoppuaika(double aika) {
		DecimalFormat formatter = new DecimalFormat("#0.00");
		this.kokAika.setText(formatter.format(aika));
	}

	@Override
	public void setPalvellutAsiakkaat(int asiakkaat) {
		// DecimalFormat formatter = new DecimalFormat("#0");
		this.asiakkaat.setText(String.valueOf(asiakkaat));

	}

	@Override
	public IVisualisointi getVisualisointi() {
		return naytto;
	}

	@Override
	public int getMontakoPalvelupistettä() {
		int luku = turvapisteValinta.getSelectionModel().getSelectedIndex();
		return luku;
	}

	@Override
	public int[] getTurvapisteAhkeruus() {
		int[] valinnat = new int[5];
		valinnat[0] = ahkeruusValinta1.getSelectionModel().getSelectedIndex();
		valinnat[1] = ahkeruusValinta2.getSelectionModel().getSelectedIndex();
		valinnat[2] = ahkeruusValinta3.getSelectionModel().getSelectedIndex();
		valinnat[3] = ahkeruusValinta4.getSelectionModel().getSelectedIndex();
		valinnat[4] = ahkeruusValinta5.getSelectionModel().getSelectedIndex();
		return valinnat;
	}

	// JavaFX-sovelluksen (käyttöliittymän) käynnistäminen

	public static void main(String[] args) {
		launch(args);
	}

	private void setTuloksetScene() {
		Stage newWindow = new Stage();
		BorderPane root = new BorderPane();
		root.setPadding(new Insets(30, 20, 20, 20));

		Scene secondScene = new Scene(root, 1500, 800);
		newWindow.setTitle("Second Stage");
		newWindow.setScene(secondScene);

		newWindow.setTitle("Tulokset");

		VBox vasOtsikotVBox = new VBox();
		VBox vasTuloksetVBox = new VBox();
		vasOtsikotVBox.setSpacing(10);
		vasTuloksetVBox.setSpacing(10);
		TilePane vasen = new TilePane();
		vasen.setHgap(10);
		vasen.setPrefWidth(400);
		vasen.setPrefColumns(2);
		vasen.getChildren().addAll(vasOtsikotVBox, vasTuloksetVBox);

		// Pylväsdiagrammi
		String checkIn = "Lähtöselvitys";
		String laukut = "Matkatavaroiden luovutus";
		String turva1 = "Turvatarkastuspiste 1";
		String turva2 = "Turvatarkastuspiste 2";
		String turva3 = "Turvatarkastuspiste 3";
		String turva4 = "Turvatarkastuspiste 4";
		String turva5 = "Turvatarkastuspiste 5";
		String erityis = "Erityisturvatarkastus";

		CategoryAxis xAxis = new CategoryAxis();
		NumberAxis yAxis = new NumberAxis();
		BarChart<String, Number> lapimenoajatBC = new BarChart<String, Number>(xAxis, yAxis);
		lapimenoajatBC.setTitle("Läpimenoajat");
		xAxis.setLabel("Palvelupiste");
		yAxis.setLabel("Aika");

		final XYChart.Series<String, Number> series1 = new XYChart.Series<>();
		series1.setName("Keskimääräinen läpimenoaika");
		series1.getData().add(new XYChart.Data<>(checkIn, 25601.34));
		series1.getData().add(new XYChart.Data<>(laukut, 20148.82));
		series1.getData().add(new XYChart.Data<>(turva1, 10000));
		series1.getData().add(new XYChart.Data<>(turva2, 35407.15));
		series1.getData().add(new XYChart.Data<>(turva3, 12000));
		series1.getData().add(new XYChart.Data<>(turva4, 12000));
		series1.getData().add(new XYChart.Data<>(turva5, 12000));
		series1.getData().add(new XYChart.Data<>(erityis, 12000));

		lapimenoajatBC.getData().add(series1);
		Group groupLapimeno = new Group(lapimenoajatBC);
		groupLapimeno.prefHeight(250);
		groupLapimeno.prefWidth(800);

		/*
		 * final XYChart.Series series2 = new XYChart.Series();
		 * series2.setName("Keskimääräinen jononpituus"); series2.getData().add(new
		 * XYChart.Data(checkIn, 57401.85)); series2.getData().add(new
		 * XYChart.Data(laukut, 41941.19)); series2.getData().add(new
		 * XYChart.Data(turva1, 45263.37)); series2.getData().add(new
		 * XYChart.Data(turva2, 117320.16)); series2.getData().add(new
		 * XYChart.Data(turva3, 14845.27)); series2.getData().add(new
		 * XYChart.Data(turva4, 14845.27)); series2.getData().add(new
		 * XYChart.Data(turva5, 14845.27)); series2.getData().add(new
		 * XYChart.Data(erityis, 14845.27));
		 */

		Label otsikko = new Label("Tulokset");
		otsikko.setFont(Font.font("Arial", FontWeight.BOLD, 40));
		BorderPane.setAlignment(otsikko, Pos.TOP_CENTER);
		asiakkaatLabel = new Label("Palvellut asiakkaat:");
		asiakkaatLabel.setFont(Font.font("Tahoma", FontWeight.NORMAL, 20));

		asiakkaat.setFont(Font.font("Tahoma", FontWeight.NORMAL, 20));
		asiakkaat.setPrefWidth(150);

		kokonaisAikaLabel = new Label("Kokonaisaika:");
		kokonaisAikaLabel.setFont(Font.font("Tahoma", FontWeight.NORMAL, 20));

		kokAika.setFont(Font.font("Tahoma", FontWeight.NORMAL, 20));
		kokAika.setPrefWidth(150);

		vasOtsikotVBox.getChildren().addAll(kokonaisAikaLabel, asiakkaatLabel);
		vasTuloksetVBox.getChildren().addAll(kokAika, asiakkaat);

		root.setTop(otsikko);
		root.setLeft(vasen);
		root.setCenter(groupLapimeno);

		newWindow.setScene(secondScene);
		newWindow.show();
	}
}
